FROM cruizba/ubuntu-dind:latest

ENV DEBIAN_FRONTEND=noninteractive

# Install basic utilities
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    git \
    gpg \
    apt-transport-https \
    sed \
    coreutils \
    sudo \
    openssh-client

# Add repository for older libraries and install libtinfo5 or libncurses5
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    add-apt-repository "deb http://archive.ubuntu.com/ubuntu/ focal main universe" && \
    apt-get update && \
    apt-get install -y libtinfo5 || \
    apt-get install -y libncurses5

# Install CUDA toolkit
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb && \
    dpkg -i cuda-keyring_1.1-1_all.deb && \
    apt-get update && \
    apt-get install -y cuda-toolkit-12-4 && \
    rm cuda-keyring_1.1-1_all.deb

# Install NVIDIA Container Toolkit
RUN curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg && \
    curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
    tee /etc/apt/sources.list.d/nvidia-container-toolkit.list && \
    apt-get update -q && \
    apt-get install -yq nvidia-container-toolkit && \
    nvidia-ctk runtime configure --runtime=docker

# Install Rust using rustup
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
    echo 'source $HOME/.cargo/env' >> /root/.bashrc && \
    . $HOME/.cargo/env && \
    rustup default stable

# Verify Rust installation
RUN . $HOME/.cargo/env && rustc --version && cargo --version

# Update and install LLDB
RUN apt-get install -y lldb \
    pkg-config \
    libssl-dev

COPY poststart.sh /usr/local/bin/poststart.sh
RUN chmod +x /usr/local/bin/poststart.sh

CMD ["bash"]
